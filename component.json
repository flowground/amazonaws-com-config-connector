{
    "title": "AWS Config",
    "description": "AWS Config AWS Config provides a way to keep track of the configurations of all\nthe AWS resources associated with your AWS account. You can use AWS Config to\nget the current and historical configurations of each AWS resource and also to\nget information about the relationship between the resources. An AWS resource\ncan be an Amazon Compute Cloud (Amazon EC2) instance, an Elastic Block Store\n(EBS) volume, an elastic network Interface (ENI), or a security group. For a\ncomplete list of resources currently supported by AWS Config, see Supported AWS\nResources\n[https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources]\n.\n\nYou can access and manage AWS Config through the AWS Management Console, the AWS\nCommand Line Interface (AWS CLI), the AWS Config API, or the AWS SDKs for AWS\nConfig. This reference guide contains documentation for the AWS Config API and\nthe AWS CLI commands that you can use to manage AWS Config. The AWS Config API\nuses the Signature Version 4 protocol for signing requests. For more information\nabout how to sign a request with this protocol, see Signature Version 4 Signing\nProcess [https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html]\n. For detailed information about AWS Config features and their associated\nactions or commands, as well as how to work with AWS Management Console, see \nWhat Is AWS Config\n[https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html] in\nthe AWS Config Developer Guide.",
    "docsUrl": "https://aws.amazon.com/config/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/config/2014-11-12/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://config.amazonaws.com/",
                    "http://config.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "BatchGetAggregateResourceConfig": {
            "main": "./lib/actions/BatchGetAggregateResourceConfig.js",
            "title": "BatchGetAggregateResourceConfig",
            "description": "Returns the current configuration items for resources that are present in your\nAWS Config aggregator. The operation also returns a list of resources that are\nnot processed in the current request. If there are no unprocessed resources, the\noperation returns an empty unprocessedResourceIdentifiers list. \n\n *  The API does not return results for deleted resources.\n   \n   \n *   The API does not return tags and relationships.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetAggregateResourceConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetResourceConfig": {
            "main": "./lib/actions/BatchGetResourceConfig.js",
            "title": "BatchGetResourceConfig",
            "description": "Returns the current configuration for one or more requested resources. The\noperation also returns a list of resources that are not processed in the current\nrequest. If there are no unprocessed resources, the operation returns an empty\nunprocessedResourceKeys list. \n\n *  The API does not return results for deleted resources.\n   \n   \n *   The API does not return any tags for the requested resources. This\n   information is filtered out of the supplementaryConfiguration section of the\n   API response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetResourceConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAggregationAuthorization": {
            "main": "./lib/actions/DeleteAggregationAuthorization.js",
            "title": "DeleteAggregationAuthorization",
            "description": "Deletes the authorization granted to the specified configuration aggregator account in a specified region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAggregationAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteConfigRule": {
            "main": "./lib/actions/DeleteConfigRule.js",
            "title": "DeleteConfigRule",
            "description": "Deletes the specified AWS Config rule and all of its evaluation results.\n\nAWS Config sets the state of a rule to DELETING until the deletion is complete.\nYou cannot update a rule while it is in this state. If you make a PutConfigRule \nor DeleteConfigRule request for the rule, you will receive a \nResourceInUseException.\n\nYou can check the state of a rule by using the DescribeConfigRules request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteConfigurationAggregator": {
            "main": "./lib/actions/DeleteConfigurationAggregator.js",
            "title": "DeleteConfigurationAggregator",
            "description": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteConfigurationAggregator.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteConfigurationRecorder": {
            "main": "./lib/actions/DeleteConfigurationRecorder.js",
            "title": "DeleteConfigurationRecorder",
            "description": "Deletes the configuration recorder.\n\nAfter the configuration recorder is deleted, AWS Config will not record resource\nconfiguration changes until you create a new configuration recorder.\n\nThis action does not delete the configuration information that was previously\nrecorded. You will be able to access the previously recorded information by\nusing the GetResourceConfigHistory action, but you will not be able to access\nthis information in the AWS Config console until you create a new configuration\nrecorder.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteConfigurationRecorder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDeliveryChannel": {
            "main": "./lib/actions/DeleteDeliveryChannel.js",
            "title": "DeleteDeliveryChannel",
            "description": "Deletes the delivery channel.\n\nBefore you can delete the delivery channel, you must stop the configuration\nrecorder by using the StopConfigurationRecorder action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDeliveryChannel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteEvaluationResults": {
            "main": "./lib/actions/DeleteEvaluationResults.js",
            "title": "DeleteEvaluationResults",
            "description": "Deletes the evaluation results for the specified AWS Config rule. You can specify one AWS Config rule per request. After you delete the evaluation results, you can call the <a>StartConfigRulesEvaluation</a> API to start evaluating your AWS resources against the rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteEvaluationResults.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePendingAggregationRequest": {
            "main": "./lib/actions/DeletePendingAggregationRequest.js",
            "title": "DeletePendingAggregationRequest",
            "description": "Deletes pending authorization requests for a specified aggregator account in a specified region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePendingAggregationRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRemediationConfiguration": {
            "main": "./lib/actions/DeleteRemediationConfiguration.js",
            "title": "DeleteRemediationConfiguration",
            "description": "Deletes the remediation configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRemediationConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRetentionConfiguration": {
            "main": "./lib/actions/DeleteRetentionConfiguration.js",
            "title": "DeleteRetentionConfiguration",
            "description": "Deletes the retention configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRetentionConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeliverConfigSnapshot": {
            "main": "./lib/actions/DeliverConfigSnapshot.js",
            "title": "DeliverConfigSnapshot",
            "description": "Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the\nspecified delivery channel. After the delivery has started, AWS Config sends the\nfollowing notifications using an Amazon SNS topic that you have specified.\n\n *  Notification of the start of the delivery.\n   \n   \n *  Notification of the completion of the delivery, if the delivery was\n   successfully completed.\n   \n   \n *  Notification of delivery failure, if the delivery failed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeliverConfigSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAggregateComplianceByConfigRules": {
            "main": "./lib/actions/DescribeAggregateComplianceByConfigRules.js",
            "title": "DescribeAggregateComplianceByConfigRules",
            "description": "Returns a list of compliant and noncompliant rules with the number of resources\nfor compliant and noncompliant rules. \n\nThe results can return an empty result page, but if you have a nextToken, the\nresults are displayed on the next page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAggregateComplianceByConfigRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAggregationAuthorizations": {
            "main": "./lib/actions/DescribeAggregationAuthorizations.js",
            "title": "DescribeAggregationAuthorizations",
            "description": "Returns a list of authorizations granted to various aggregator accounts and regions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAggregationAuthorizations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeComplianceByConfigRule": {
            "main": "./lib/actions/DescribeComplianceByConfigRule.js",
            "title": "DescribeComplianceByConfigRule",
            "description": "Indicates whether the specified AWS Config rules are compliant. If a rule is\nnoncompliant, this action returns the number of AWS resources that do not comply\nwith the rule.\n\nA rule is compliant if all of the evaluated resources comply with it. It is\nnoncompliant if any of these resources do not comply.\n\nIf AWS Config has no current evaluation results for the rule, it returns \nINSUFFICIENT_DATA. This result might indicate one of the following conditions:\n\n *  AWS Config has never invoked an evaluation for the rule. To check whether it\n   has, use the DescribeConfigRuleEvaluationStatus action to get the \n   LastSuccessfulInvocationTime and LastFailedInvocationTime.\n   \n   \n *  The rule's AWS Lambda function is failing to send evaluation results to AWS\n   Config. Verify that the role you assigned to your configuration recorder\n   includes the config:PutEvaluations permission. If the rule is a custom rule,\n   verify that the AWS Lambda execution role includes the config:PutEvaluations \n   permission.\n   \n   \n *  The rule's AWS Lambda function has returned NOT_APPLICABLE for all evaluation\n   results. This can occur if the resources were deleted or removed from the\n   rule's scope.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeComplianceByConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeComplianceByResource": {
            "main": "./lib/actions/DescribeComplianceByResource.js",
            "title": "DescribeComplianceByResource",
            "description": "Indicates whether the specified AWS resources are compliant. If a resource is\nnoncompliant, this action returns the number of AWS Config rules that the\nresource does not comply with.\n\nA resource is compliant if it complies with all the AWS Config rules that\nevaluate it. It is noncompliant if it does not comply with one or more of these\nrules.\n\nIf AWS Config has no current evaluation results for the resource, it returns \nINSUFFICIENT_DATA. This result might indicate one of the following conditions\nabout the rules that evaluate the resource:\n\n *  AWS Config has never invoked an evaluation for the rule. To check whether it\n   has, use the DescribeConfigRuleEvaluationStatus action to get the \n   LastSuccessfulInvocationTime and LastFailedInvocationTime.\n   \n   \n *  The rule's AWS Lambda function is failing to send evaluation results to AWS\n   Config. Verify that the role that you assigned to your configuration recorder\n   includes the config:PutEvaluations permission. If the rule is a custom rule,\n   verify that the AWS Lambda execution role includes the config:PutEvaluations \n   permission.\n   \n   \n *  The rule's AWS Lambda function has returned NOT_APPLICABLE for all evaluation\n   results. This can occur if the resources were deleted or removed from the\n   rule's scope.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeComplianceByResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigRuleEvaluationStatus": {
            "main": "./lib/actions/DescribeConfigRuleEvaluationStatus.js",
            "title": "DescribeConfigRuleEvaluationStatus",
            "description": "Returns status information for each of your AWS managed Config rules. The status includes information such as the last time AWS Config invoked the rule, the last time AWS Config failed to invoke the rule, and the related error for the last failure.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigRuleEvaluationStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigRules": {
            "main": "./lib/actions/DescribeConfigRules.js",
            "title": "DescribeConfigRules",
            "description": "Returns details about your AWS Config rules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigurationAggregatorSourcesStatus": {
            "main": "./lib/actions/DescribeConfigurationAggregatorSourcesStatus.js",
            "title": "DescribeConfigurationAggregatorSourcesStatus",
            "description": " Returns status information for sources within an aggregator. The status includes information about the last time AWS Config verified authorization between the source account and an aggregator account. In case of a failure, the status contains the related error code or message. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigurationAggregatorSourcesStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigurationAggregators": {
            "main": "./lib/actions/DescribeConfigurationAggregators.js",
            "title": "DescribeConfigurationAggregators",
            "description": "Returns the details of one or more configuration aggregators. If the configuration aggregator is not specified, this action returns the details for all the configuration aggregators associated with the account. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigurationAggregators.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigurationRecorderStatus": {
            "main": "./lib/actions/DescribeConfigurationRecorderStatus.js",
            "title": "DescribeConfigurationRecorderStatus",
            "description": "Returns the current status of the specified configuration recorder. If a\nconfiguration recorder is not specified, this action returns the status of all\nconfiguration recorders associated with the account.\n\nCurrently, you can specify only one configuration recorder per region in your\naccount.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigurationRecorderStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigurationRecorders": {
            "main": "./lib/actions/DescribeConfigurationRecorders.js",
            "title": "DescribeConfigurationRecorders",
            "description": "Returns the details for the specified configuration recorders. If the\nconfiguration recorder is not specified, this action returns the details for all\nconfiguration recorders associated with the account.\n\nCurrently, you can specify only one configuration recorder per region in your\naccount.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigurationRecorders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDeliveryChannelStatus": {
            "main": "./lib/actions/DescribeDeliveryChannelStatus.js",
            "title": "DescribeDeliveryChannelStatus",
            "description": "Returns the current status of the specified delivery channel. If a delivery\nchannel is not specified, this action returns the current status of all delivery\nchannels associated with the account.\n\nCurrently, you can specify only one delivery channel per region in your account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDeliveryChannelStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDeliveryChannels": {
            "main": "./lib/actions/DescribeDeliveryChannels.js",
            "title": "DescribeDeliveryChannels",
            "description": "Returns details about the specified delivery channel. If a delivery channel is\nnot specified, this action returns the details of all delivery channels\nassociated with the account.\n\nCurrently, you can specify only one delivery channel per region in your account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDeliveryChannels.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePendingAggregationRequests": {
            "main": "./lib/actions/DescribePendingAggregationRequests.js",
            "title": "DescribePendingAggregationRequests",
            "description": "Returns a list of all pending aggregation requests.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePendingAggregationRequests.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeRemediationConfigurations": {
            "main": "./lib/actions/DescribeRemediationConfigurations.js",
            "title": "DescribeRemediationConfigurations",
            "description": "Returns the details of one or more remediation configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeRemediationConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeRemediationExecutionStatus": {
            "main": "./lib/actions/DescribeRemediationExecutionStatus.js",
            "title": "DescribeRemediationExecutionStatus",
            "description": "Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps for when steps for the remediation execution happen, and any error messages for steps that have failed. When you specify the limit and the next token, you receive a paginated response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeRemediationExecutionStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeRetentionConfigurations": {
            "main": "./lib/actions/DescribeRetentionConfigurations.js",
            "title": "DescribeRetentionConfigurations",
            "description": "Returns the details of one or more retention configurations. If the retention\nconfiguration name is not specified, this action returns the details for all the\nretention configurations for that account.\n\nCurrently, AWS Config supports only one retention configuration per region in\nyour account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeRetentionConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAggregateComplianceDetailsByConfigRule": {
            "main": "./lib/actions/GetAggregateComplianceDetailsByConfigRule.js",
            "title": "GetAggregateComplianceDetailsByConfigRule",
            "description": "Returns the evaluation results for the specified AWS Config rule for a specific\nresource in a rule. The results indicate which AWS resources were evaluated by\nthe rule, when each resource was last evaluated, and whether each resource\ncomplies with the rule. \n\nThe results can return an empty result page. But if you have a nextToken, the\nresults are displayed on the next page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAggregateComplianceDetailsByConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAggregateConfigRuleComplianceSummary": {
            "main": "./lib/actions/GetAggregateConfigRuleComplianceSummary.js",
            "title": "GetAggregateConfigRuleComplianceSummary",
            "description": "Returns the number of compliant and noncompliant rules for one or more accounts\nand regions in an aggregator.\n\nThe results can return an empty result page, but if you have a nextToken, the\nresults are displayed on the next page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAggregateConfigRuleComplianceSummary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAggregateDiscoveredResourceCounts": {
            "main": "./lib/actions/GetAggregateDiscoveredResourceCounts.js",
            "title": "GetAggregateDiscoveredResourceCounts",
            "description": "Returns the resource counts across accounts and regions that are present in your\nAWS Config aggregator. You can request the resource counts by providing filters\nand GroupByKey.\n\nFor example, if the input contains accountID 12345678910 and region us-east-1 in\nfilters, the API returns the count of resources in account ID 12345678910 and\nregion us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the API\nreturns resource counts for all source accounts that are present in your\naggregator.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAggregateDiscoveredResourceCounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAggregateResourceConfig": {
            "main": "./lib/actions/GetAggregateResourceConfig.js",
            "title": "GetAggregateResourceConfig",
            "description": "Returns configuration item that is aggregated for your specific resource in a specific source account and region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAggregateResourceConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetComplianceDetailsByConfigRule": {
            "main": "./lib/actions/GetComplianceDetailsByConfigRule.js",
            "title": "GetComplianceDetailsByConfigRule",
            "description": "Returns the evaluation results for the specified AWS Config rule. The results indicate which AWS resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetComplianceDetailsByConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetComplianceDetailsByResource": {
            "main": "./lib/actions/GetComplianceDetailsByResource.js",
            "title": "GetComplianceDetailsByResource",
            "description": "Returns the evaluation results for the specified AWS resource. The results indicate which AWS Config rules were used to evaluate the resource, when each rule was last used, and whether the resource complies with each rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetComplianceDetailsByResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetComplianceSummaryByConfigRule": {
            "main": "./lib/actions/GetComplianceSummaryByConfigRule.js",
            "title": "GetComplianceSummaryByConfigRule",
            "description": "Returns the number of AWS Config rules that are compliant and noncompliant, up to a maximum of 25 for each.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetComplianceSummaryByConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetComplianceSummaryByResourceType": {
            "main": "./lib/actions/GetComplianceSummaryByResourceType.js",
            "title": "GetComplianceSummaryByResourceType",
            "description": "Returns the number of resources that are compliant and the number that are noncompliant. You can specify one or more resource types to get these numbers for each resource type. The maximum number returned is 100.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetComplianceSummaryByResourceType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDiscoveredResourceCounts": {
            "main": "./lib/actions/GetDiscoveredResourceCounts.js",
            "title": "GetDiscoveredResourceCounts",
            "description": "Returns the resource types, the number of each resource type, and the total\nnumber of resources that AWS Config is recording in this region for your AWS\naccount. \n\n Example \n\n 1.  AWS Config is recording three resource types in the US East (Ohio) Region\n    for your account: 25 EC2 instances, 20 IAM users, and 15 S3 buckets.\n    \n    \n 2.  You make a call to the GetDiscoveredResourceCounts action and specify that\n    you want all resource types. \n    \n    \n 3.  AWS Config returns the following:\n    \n     *  The resource types (EC2 instances, IAM users, and S3 buckets).\n       \n       \n     *  The number of each resource type (25, 20, and 15).\n       \n       \n     *  The total number of all resources (60).\n       \n       \n    \n    \n\nThe response is paginated. By default, AWS Config lists 100 ResourceCount \nobjects on each page. You can customize this number with the limit parameter.\nThe response includes a nextToken string. To get the next page of results, run\nthe request again and specify the string for the nextToken parameter.\n\nIf you make a call to the GetDiscoveredResourceCounts action, you might not\nimmediately receive resource counts in the following situations:\n\n *  You are a new AWS Config customer.\n   \n   \n *  You just enabled resource recording.\n   \n   \n\nIt might take a few minutes for AWS Config to record and count your resources.\nWait a few minutes and then retry the GetDiscoveredResourceCounts action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDiscoveredResourceCounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetResourceConfigHistory": {
            "main": "./lib/actions/GetResourceConfigHistory.js",
            "title": "GetResourceConfigHistory",
            "description": "Returns a list of configuration items for the specified resource. The list\ncontains details about each state of the resource during the specified time\ninterval. If you specified a retention period to retain your ConfigurationItems \nbetween a minimum of 30 days and a maximum of 7 years (2557 days), AWS Config\nreturns the ConfigurationItems for the specified retention period. \n\nThe response is paginated. By default, AWS Config returns a limit of 10\nconfiguration items per page. You can customize this number with the limit \nparameter. The response includes a nextToken string. To get the next page of\nresults, run the request again and specify the string for the nextToken \nparameter.\n\nEach call to the API is limited to span a duration of seven days. It is likely\nthat the number of records returned is smaller than the specified limit. In such\ncases, you can make another call, using the nextToken.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetResourceConfigHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAggregateDiscoveredResources": {
            "main": "./lib/actions/ListAggregateDiscoveredResources.js",
            "title": "ListAggregateDiscoveredResources",
            "description": "Accepts a resource type and returns a list of resource identifiers that are\naggregated for a specific resource type across accounts and regions. A resource\nidentifier includes the resource type, ID, (if available) the custom resource\nname, source account, and source region. You can narrow the results to include\nonly resources that have specific resource IDs, or a resource name, or source\naccount ID, or source region.\n\nFor example, if the input consists of accountID 12345678910 and the region is\nus-east-1 for resource type AWS::EC2::Instance then the API returns all the EC2\ninstance identifiers of accountID 12345678910 and region us-east-1.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAggregateDiscoveredResources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDiscoveredResources": {
            "main": "./lib/actions/ListDiscoveredResources.js",
            "title": "ListDiscoveredResources",
            "description": "Accepts a resource type and returns a list of resource identifiers for the\nresources of that type. A resource identifier includes the resource type, ID,\nand (if available) the custom resource name. The results consist of resources\nthat AWS Config has discovered, including those that AWS Config is not currently\nrecording. You can narrow the results to include only resources that have\nspecific resource IDs or a resource name.\n\nYou can specify either resource IDs or a resource name, but not both, in the\nsame request.\n\nThe response is paginated. By default, AWS Config lists 100 resource identifiers\non each page. You can customize this number with the limit parameter. The\nresponse includes a nextToken string. To get the next page of results, run the\nrequest again and specify the string for the nextToken parameter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDiscoveredResources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutAggregationAuthorization": {
            "main": "./lib/actions/PutAggregationAuthorization.js",
            "title": "PutAggregationAuthorization",
            "description": "Authorizes the aggregator account and region to collect data from the source account and region. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutAggregationAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutConfigRule": {
            "main": "./lib/actions/PutConfigRule.js",
            "title": "PutConfigRule",
            "description": "Adds or updates an AWS Config rule for evaluating whether your AWS resources\ncomply with your desired configurations.\n\nYou can use this action for custom AWS Config rules and AWS managed Config\nrules. A custom AWS Config rule is a rule that you develop and maintain. An AWS\nmanaged Config rule is a customizable, predefined rule that AWS Config provides.\n\nIf you are adding a new custom AWS Config rule, you must first create the AWS\nLambda function that the rule invokes to evaluate your resources. When you use\nthe PutConfigRule action to add the rule to AWS Config, you must specify the\nAmazon Resource Name (ARN) that AWS Lambda assigns to the function. Specify the\nARN for the SourceIdentifier key. This key is part of the Source object, which\nis part of the ConfigRule object. \n\nIf you are adding an AWS managed Config rule, specify the rule's identifier for\nthe SourceIdentifier key. To reference AWS managed Config rule identifiers, see \nAbout AWS Managed Config Rules\n[https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html]\n.\n\nFor any new rule that you add, specify the ConfigRuleName in the ConfigRule \nobject. Do not specify the ConfigRuleArn or the ConfigRuleId. These values are\ngenerated by AWS Config for new rules.\n\nIf you are updating a rule that you added previously, you can specify the rule\nby ConfigRuleName, ConfigRuleId, or ConfigRuleArn in the ConfigRule data type\nthat you use in this request.\n\nThe maximum number of rules that AWS Config supports is 150.\n\nFor information about requesting a rule limit increase, see AWS Config Limits\n[http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config] \nin the AWS General Reference Guide.\n\nFor more information about developing and using AWS Config rules, see Evaluating\nAWS Resource Configurations with AWS Config\n[https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html] \nin the AWS Config Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutConfigRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutConfigurationAggregator": {
            "main": "./lib/actions/PutConfigurationAggregator.js",
            "title": "PutConfigurationAggregator",
            "description": "Creates and updates the configuration aggregator with the selected source\naccounts and regions. The source account can be individual account(s) or an\norganization.\n\nAWS Config should be enabled in source accounts and regions you want to\naggregate.\n\nIf your source type is an organization, you must be signed in to the master\naccount and all features must be enabled in your organization. AWS Config calls \nEnableAwsServiceAccess API to enable integration between AWS Config and AWS\nOrganizations.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutConfigurationAggregator.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutConfigurationRecorder": {
            "main": "./lib/actions/PutConfigurationRecorder.js",
            "title": "PutConfigurationRecorder",
            "description": "Creates a new configuration recorder to record the selected resource\nconfigurations.\n\nYou can use this action to change the role roleARN or the recordingGroup of an\nexisting recorder. To change the role, call the action on the existing\nconfiguration recorder and specify a role.\n\nCurrently, you can specify only one configuration recorder per region in your\naccount.\n\nIf ConfigurationRecorder does not have the recordingGroup parameter specified,\nthe default is to record all supported resource types.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutConfigurationRecorder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutDeliveryChannel": {
            "main": "./lib/actions/PutDeliveryChannel.js",
            "title": "PutDeliveryChannel",
            "description": "Creates a delivery channel object to deliver configuration information to an\nAmazon S3 bucket and Amazon SNS topic.\n\nBefore you can create a delivery channel, you must create a configuration\nrecorder.\n\nYou can use this action to change the Amazon S3 bucket or an Amazon SNS topic of\nthe existing delivery channel. To change the Amazon S3 bucket or an Amazon SNS\ntopic, call this action and specify the changed values for the S3 bucket and the\nSNS topic. If you specify a different value for either the S3 bucket or the SNS\ntopic, this action will keep the existing value for the parameter that is not\nchanged.\n\nYou can have only one delivery channel per region in your account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutDeliveryChannel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutEvaluations": {
            "main": "./lib/actions/PutEvaluations.js",
            "title": "PutEvaluations",
            "description": "Used by an AWS Lambda function to deliver evaluation results to AWS Config. This action is required in every AWS Lambda function that is invoked by an AWS Config rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutEvaluations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutRemediationConfigurations": {
            "main": "./lib/actions/PutRemediationConfigurations.js",
            "title": "PutRemediationConfigurations",
            "description": "Adds or updates the remediation configuration with a specific AWS Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the AWS Config rule. AWS Config rule must already exist for you to add a remeduation configuration. The target (SSM document) must exist and have permissions to use the target. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutRemediationConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutRetentionConfiguration": {
            "main": "./lib/actions/PutRetentionConfiguration.js",
            "title": "PutRetentionConfiguration",
            "description": "Creates and updates the retention configuration with details about retention\nperiod (number of days) that AWS Config stores your historical information. The\nAPI creates the RetentionConfiguration object and names the object as default.\nWhen you have a RetentionConfiguration object named default, calling the API\nmodifies the default object. \n\nCurrently, AWS Config supports only one retention configuration per region in\nyour account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutRetentionConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartConfigRulesEvaluation": {
            "main": "./lib/actions/StartConfigRulesEvaluation.js",
            "title": "StartConfigRulesEvaluation",
            "description": "Runs an on-demand evaluation for the specified AWS Config rules against the last\nknown configuration state of the resources. Use StartConfigRulesEvaluation when\nyou want to test that a rule you updated is working as expected. \nStartConfigRulesEvaluation does not re-record the latest configuration state for\nyour resources. It re-runs an evaluation against the last known state of your\nresources. \n\nYou can specify up to 25 AWS Config rules per request. \n\nAn existing StartConfigRulesEvaluation call for the specified rules must\ncomplete before you can call the API again. If you chose to have AWS Config\nstream to an Amazon SNS topic, you will receive a ConfigRuleEvaluationStarted \nnotification when the evaluation starts.\n\nYou don't need to call the StartConfigRulesEvaluation API to run an evaluation\nfor a new rule. When you create a rule, AWS Config evaluates your resources\nagainst the rule automatically. \n\nThe StartConfigRulesEvaluation API is useful if you want to run on-demand\nevaluations, such as the following example:\n\n 1.  You have a custom rule that evaluates your IAM resources every 24 hours.\n    \n    \n 2.  You update your Lambda function to add additional conditions to your rule.\n    \n    \n 3.  Instead of waiting for the next periodic evaluation, you call the \n    StartConfigRulesEvaluation API.\n    \n    \n 4.  AWS Config invokes your Lambda function and evaluates your IAM resources.\n    \n    \n 5.  Your custom rule will still run periodic evaluations every 24 hours.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartConfigRulesEvaluation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartConfigurationRecorder": {
            "main": "./lib/actions/StartConfigurationRecorder.js",
            "title": "StartConfigurationRecorder",
            "description": "Starts recording configurations of the AWS resources you have selected to record\nin your AWS account.\n\nYou must have created at least one delivery channel to successfully start the\nconfiguration recorder.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartConfigurationRecorder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartRemediationExecution": {
            "main": "./lib/actions/StartRemediationExecution.js",
            "title": "StartRemediationExecution",
            "description": "Runs an on-demand remediation for the specified AWS Config rules against the\nlast known remediation configuration. It runs an execution against the current\nstate of your resources. Remediation execution is asynchronous.\n\nYou can specify up to 100 resource keys per request. An existing\nStartRemediationExecution call for the specified resource keys must complete\nbefore you can call the API again.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartRemediationExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopConfigurationRecorder": {
            "main": "./lib/actions/StopConfigurationRecorder.js",
            "title": "StopConfigurationRecorder",
            "description": "Stops recording configurations of the AWS resources you have selected to record in your AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopConfigurationRecorder.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}